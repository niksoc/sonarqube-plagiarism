// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<div
  className="account-body account-container"
>
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    title="my_account.notifications"
  />
  <Alert
    variant="info"
  >
    notification.dispatcher.information
  </Alert>
  <DeferredSpinner
    loading={true}
    timeout={100}
  >
    <GlobalNotifications
      addNotification={[MockFunction]}
      channels={
        Array [
          "channel1",
          "channel2",
        ]
      }
      notifications={Array []}
      removeNotification={[MockFunction]}
      types={
        Array [
          "type-global",
          "type-common",
        ]
      }
    />
    <Projects
      addNotification={[MockFunction]}
      channels={
        Array [
          "channel1",
          "channel2",
        ]
      }
      notifications={
        Array [
          Object {
            "channel": "channel1",
            "organization": "org",
            "project": "foo",
            "projectName": "Foo",
            "type": "type-global",
          },
          Object {
            "channel": "channel1",
            "organization": "org",
            "project": "bar",
            "projectName": "Bar",
            "type": "type-common",
          },
          Object {
            "channel": "channel2",
            "organization": "org",
            "project": "qux",
            "projectName": "Qux",
            "type": "type-common",
          },
        ]
      }
      removeNotification={[MockFunction]}
      types={
        Array [
          "type-common",
        ]
      }
    />
  </DeferredSpinner>
</div>
`;

exports[`should render correctly 2`] = `
<div
  className="account-body account-container"
>
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    title="my_account.notifications"
  />
  <Alert
    variant="info"
  >
    notification.dispatcher.information
  </Alert>
  <DeferredSpinner
    loading={false}
    timeout={100}
  >
    <GlobalNotifications
      addNotification={[MockFunction]}
      channels={
        Array [
          "channel1",
          "channel2",
        ]
      }
      notifications={Array []}
      removeNotification={[MockFunction]}
      types={
        Array [
          "type-global",
          "type-common",
        ]
      }
    />
    <Projects
      addNotification={[MockFunction]}
      channels={
        Array [
          "channel1",
          "channel2",
        ]
      }
      notifications={
        Array [
          Object {
            "channel": "channel1",
            "organization": "org",
            "project": "foo",
            "projectName": "Foo",
            "type": "type-global",
          },
          Object {
            "channel": "channel1",
            "organization": "org",
            "project": "bar",
            "projectName": "Bar",
            "type": "type-common",
          },
          Object {
            "channel": "channel2",
            "organization": "org",
            "project": "qux",
            "projectName": "Qux",
            "type": "type-common",
          },
        ]
      }
      removeNotification={[MockFunction]}
      types={
        Array [
          "type-common",
        ]
      }
    />
  </DeferredSpinner>
</div>
`;

exports[`should render correctly 3`] = `
<div
  className="account-body account-container"
>
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    title="my_account.notifications"
  />
  <Alert
    variant="info"
  >
    notification.dispatcher.information
  </Alert>
  <DeferredSpinner
    loading={false}
    timeout={100}
  >
    <GlobalNotifications
      addNotification={[MockFunction]}
      channels={
        Array [
          "channel1",
          "channel2",
        ]
      }
      notifications={Array []}
      removeNotification={[MockFunction]}
      types={
        Array [
          "type-global",
          "type-common",
        ]
      }
    />
    <Projects
      addNotification={[MockFunction]}
      channels={
        Array [
          "channel1",
          "channel2",
        ]
      }
      notifications={Array []}
      removeNotification={[MockFunction]}
      types={
        Array [
          "type-common",
        ]
      }
    />
  </DeferredSpinner>
</div>
`;
