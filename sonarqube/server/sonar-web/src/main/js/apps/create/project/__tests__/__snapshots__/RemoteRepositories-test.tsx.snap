// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should display the list of repositories 1`] = `
<div
  className="create-project"
>
  <div
    className="flex-1 huge-spacer-right"
  >
    <div
      className="spacer-bottom create-project-actions"
    >
      <div />
    </div>
    <DeferredSpinner
      loading={true}
      timeout={100}
    >
      <ul>
        <li
          className="big-spacer-top note"
        >
          onboarding.create_project.no_repositories
        </li>
      </ul>
    </DeferredSpinner>
  </div>
  <div
    className=""
  >
    <div
      className="create-project-side-sticky"
    >
      <SetupProjectBox
        onProjectCreate={[MockFunction]}
        onProvisionFail={[Function]}
        organization={
          Object {
            "alm": Object {
              "key": "github",
              "membersSync": false,
              "personal": false,
              "url": "https://github.com/foo",
            },
            "key": "foo",
            "name": "Foo",
            "subscription": "FREE",
          }
        }
        selectedRepositories={Array []}
      />
    </div>
  </div>
</div>
`;

exports[`should display the list of repositories 2`] = `
<div
  className="create-project"
>
  <div
    className="flex-1 huge-spacer-right"
  >
    <div
      className="spacer-bottom create-project-actions"
    >
      <div>
        <Checkbox
          checked={false}
          disabled={false}
          onCheck={[Function]}
          thirdState={false}
        >
          onboarding.create_project.select_all_repositories
        </Checkbox>
      </div>
    </div>
    <DeferredSpinner
      loading={false}
      timeout={100}
    >
      <ul>
        <AlmRepositoryItem
          disabled={false}
          highlightUpgradeBox={[Function]}
          identityProvider={
            Object {
              "backgroundColor": "blue",
              "iconPath": "icon/path",
              "installationUrl": "https://alm.installation.url",
              "key": "github",
              "name": "GitHub",
            }
          }
          key="github/cool"
          repository={
            Object {
              "installationKey": "github/cool",
              "label": "Cool Project",
            }
          }
          selected={false}
          toggleRepository={[Function]}
        />
        <AlmRepositoryItem
          disabled={false}
          highlightUpgradeBox={[Function]}
          identityProvider={
            Object {
              "backgroundColor": "blue",
              "iconPath": "icon/path",
              "installationUrl": "https://alm.installation.url",
              "key": "github",
              "name": "GitHub",
            }
          }
          key="github/awesome"
          repository={
            Object {
              "installationKey": "github/awesome",
              "label": "Awesome Project",
            }
          }
          selected={false}
          toggleRepository={[Function]}
        />
      </ul>
    </DeferredSpinner>
  </div>
  <div
    className=""
  >
    <div
      className="create-project-side-sticky"
    >
      <SetupProjectBox
        onProjectCreate={[MockFunction]}
        onProvisionFail={[Function]}
        organization={
          Object {
            "alm": Object {
              "key": "github",
              "membersSync": false,
              "personal": false,
              "url": "https://github.com/foo",
            },
            "key": "foo",
            "name": "Foo",
            "subscription": "FREE",
          }
        }
        selectedRepositories={Array []}
      />
    </div>
  </div>
</div>
`;

exports[`should display the organization upgrade box 1`] = `
<UpgradeOrganizationBox
  className=""
  onOrganizationUpgrade={[Function]}
  organization={
    Object {
      "actions": Object {
        "admin": true,
      },
      "alm": Object {
        "key": "github",
        "membersSync": false,
        "personal": false,
        "url": "https://github.com/foo",
      },
      "key": "foo",
      "name": "Foo",
      "subscription": "FREE",
    }
  }
/>
`;

exports[`should select all repositories 1`] = `
Object {
  "key-1": Object {
    "installationKey": "key-1",
    "label": "Project 1",
  },
}
`;
