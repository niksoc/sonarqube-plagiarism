// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should display choice between import or creation 1`] = `
<div>
  <OrganizationDetailsStep
    finished={false}
    onOpen={[MockFunction]}
    open={true}
    stepTitle="onboarding.import_organization.import_org_details"
  >
    <div
      className="huge-spacer-bottom"
    >
      <p
        className="display-flex-center big-spacer-bottom"
      >
        <FormattedMessage
          defaultMessage="onboarding.import_organization_x"
          id="onboarding.import_organization_x"
          values={
            Object {
              "avatar": <img
                alt="GitHub"
                className="little-spacer-left"
                src="/images/sonarcloud/github.svg"
                width={16}
              />,
              "name": <strong>
                foo
              </strong>,
            }
          }
        />
        <ClearButton
          className="little-spacer-left"
          onClick={[MockFunction]}
        />
      </p>
      <RadioToggle
        disabled={false}
        name="filter"
        onCheck={[Function]}
        options={
          Array [
            Object {
              "label": "onboarding.import_organization.create_new",
              "value": "create",
            },
            Object {
              "label": "onboarding.import_organization.bind_existing",
              "value": "bind",
            },
          ]
        }
        value={null}
      />
    </div>
  </OrganizationDetailsStep>
  <PlanStep
    almApplication={
      Object {
        "backgroundColor": "#444444",
        "iconPath": "/images/sonarcloud/github-white.svg",
        "installationUrl": "https://github.com/apps/greg-sonarcloud/installations/new",
        "key": "github",
        "name": "GitHub",
      }
    }
    almOrganization={
      Object {
        "almUrl": "https://github.com/foo",
        "avatar": "http://example.com/avatar",
        "description": "description-foo",
        "key": "foo",
        "name": "foo",
        "personal": false,
        "privateRepos": 0,
        "publicRepos": 3,
        "url": "http://example.com/foo",
      }
    }
    createOrganization={[Function]}
    onDone={[MockFunction]}
    onUpgradeFail={[MockFunction]}
    open={false}
    subscriptionPlans={
      Array [
        Object {
          "maxNcloc": 100000,
          "price": 10,
        },
        Object {
          "maxNcloc": 250000,
          "price": 75,
        },
      ]
    }
  />
</div>
`;

exports[`should render prefilled and create org 1`] = `
<div>
  <OrganizationDetailsStep
    finished={false}
    onOpen={[MockFunction]}
    open={true}
    stepTitle="onboarding.import_organization.import_org_details"
  >
    <div
      className="huge-spacer-bottom"
    >
      <p
        className="display-flex-center big-spacer-bottom"
      >
        <FormattedMessage
          defaultMessage="onboarding.import_organization_x"
          id="onboarding.import_organization_x"
          values={
            Object {
              "avatar": <img
                alt="GitHub"
                className="little-spacer-left"
                src="/images/sonarcloud/github.svg"
                width={16}
              />,
              "name": <strong>
                foo
              </strong>,
            }
          }
        />
        <ClearButton
          className="little-spacer-left"
          onClick={[MockFunction]}
        />
      </p>
    </div>
    <OrganizationDetailsForm
      infoBlock={
        <Alert
          className="abs-width-600 big-spacer-top"
          display="block"
          variant="info"
        >
          <p>
            onboarding.import_organization.members_sync_info_x.organization.github.foo.github
          </p>
          <a
            href="http://github.com/orgs/thing/people"
            rel="noopener noreferrer"
            target="_blank"
          >
            organization.members.see_all_members_on_x.github
          </a>
        </Alert>
      }
      onContinue={[MockFunction]}
      organization={
        Object {
          "almUrl": "http://github.com/thing",
          "avatar": "http://example.com/avatar",
          "description": "description-foo",
          "key": "foo",
          "name": "foo",
          "personal": false,
          "privateRepos": 0,
          "publicRepos": 3,
          "url": "http://example.com/foo",
        }
      }
      submitText="continue"
    />
  </OrganizationDetailsStep>
  <PlanStep
    almApplication={
      Object {
        "backgroundColor": "#444444",
        "iconPath": "/images/sonarcloud/github-white.svg",
        "installationUrl": "https://github.com/apps/greg-sonarcloud/installations/new",
        "key": "github",
        "name": "GitHub",
      }
    }
    almOrganization={
      Object {
        "almUrl": "http://github.com/thing",
        "avatar": "http://example.com/avatar",
        "description": "description-foo",
        "key": "foo",
        "name": "foo",
        "personal": false,
        "privateRepos": 0,
        "publicRepos": 3,
        "url": "http://example.com/foo",
      }
    }
    createOrganization={[Function]}
    onDone={[MockFunction]}
    onUpgradeFail={[MockFunction]}
    open={false}
    subscriptionPlans={
      Array [
        Object {
          "maxNcloc": 100000,
          "price": 10,
        },
        Object {
          "maxNcloc": 250000,
          "price": 75,
        },
      ]
    }
  />
</div>
`;
