// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<header
  className="page-header"
>
  <h1
    className="page-title"
  >
    organization.members.page
    <DeferredSpinner
      className="little-spacer-left"
      loading={true}
      timeout={100}
    />
  </h1>
  <div
    className="page-description"
  >
    <FormattedMessage
      defaultMessage="organization.members.page.description"
      id="organization.members.page.description"
      values={
        Object {
          "link": <Link
            onlyActiveOnIndex={false}
            style={Object {}}
            target="_blank"
            to="/documentation/organizations/manage-team/"
          >
            organization.members.manage_a_team
          </Link>,
        }
      }
    />
  </div>
</header>
`;

exports[`should render for Bitbucket bound organization 1`] = `
<header
  className="page-header"
>
  <h1
    className="page-title"
  >
    organization.members.page
    <DeferredSpinner
      className="little-spacer-left"
      loading={false}
      timeout={100}
    />
  </h1>
  <div
    className="page-actions text-right"
  >
    <div
      className="display-inline-block spacer-left spacer-bottom"
    >
      <AddMemberForm
        addMember={[MockFunction]}
        memberLogins={Array []}
        organization={
          Object {
            "actions": Object {
              "admin": true,
            },
            "alm": Object {
              "key": "bitbucket",
              "membersSync": false,
              "personal": false,
              "url": "https://github.com/foo",
            },
            "key": "foo",
            "name": "Foo",
          }
        }
      />
      <DocTooltip
        className="spacer-left"
        doc={Promise {}}
      />
    </div>
  </div>
  <div
    className="page-description"
  >
    <FormattedMessage
      defaultMessage="organization.members.page.description"
      id="organization.members.page.description"
      values={
        Object {
          "link": <Link
            onlyActiveOnIndex={false}
            style={Object {}}
            target="_blank"
            to="/documentation/organizations/manage-team/"
          >
            organization.members.manage_a_team
          </Link>,
        }
      }
    />
  </div>
</header>
`;

exports[`should render for GitHub bound organization without sync 1`] = `
<header
  className="page-header"
>
  <h1
    className="page-title"
  >
    organization.members.page
    <DeferredSpinner
      className="little-spacer-left"
      loading={false}
      timeout={100}
    />
  </h1>
  <div
    className="page-actions text-right"
  >
    <div
      className="display-inline-block spacer-left spacer-bottom"
    >
      <AddMemberForm
        addMember={[MockFunction]}
        memberLogins={Array []}
        organization={
          Object {
            "actions": Object {
              "admin": true,
            },
            "alm": Object {
              "key": "github",
              "membersSync": false,
              "personal": false,
              "url": "https://github.com/foo",
            },
            "key": "foo",
            "name": "Foo",
          }
        }
      />
      <DocTooltip
        className="spacer-left"
        doc={Promise {}}
      />
    </div>
  </div>
  <div
    className="page-description"
  >
    <FormattedMessage
      defaultMessage="organization.members.page.description"
      id="organization.members.page.description"
      values={
        Object {
          "link": <Link
            onlyActiveOnIndex={false}
            style={Object {}}
            target="_blank"
            to="/documentation/organizations/manage-team/"
          >
            organization.members.manage_a_team
          </Link>,
        }
      }
    />
    <Alert
      className="spacer-top"
      display="inline"
      variant="info"
    >
      organization.members.auto_sync_members_from_org_x.organization.github
      <span
        className="spacer-left"
      >
        <Connect(SyncMemberForm)
          buttonText="configure"
          hasOtherMembers={false}
          organization={
            Object {
              "actions": Object {
                "admin": true,
              },
              "alm": Object {
                "key": "github",
                "membersSync": false,
                "personal": false,
                "url": "https://github.com/foo",
              },
              "key": "foo",
              "name": "Foo",
            }
          }
          refreshMembers={[MockFunction]}
        />
      </span>
    </Alert>
  </div>
</header>
`;

exports[`should render for admin 1`] = `
<header
  className="page-header"
>
  <h1
    className="page-title"
  >
    organization.members.page
    <DeferredSpinner
      className="little-spacer-left"
      loading={false}
      timeout={100}
    />
  </h1>
  <div
    className="page-actions text-right"
  >
    <div
      className="display-inline-block spacer-left spacer-bottom"
    >
      <AddMemberForm
        addMember={[MockFunction]}
        memberLogins={Array []}
        organization={
          Object {
            "actions": Object {
              "admin": true,
            },
            "key": "foo",
            "name": "Foo",
          }
        }
      />
      <DocTooltip
        className="spacer-left"
        doc={Promise {}}
      />
    </div>
  </div>
  <div
    className="page-description"
  >
    <FormattedMessage
      defaultMessage="organization.members.page.description"
      id="organization.members.page.description"
      values={
        Object {
          "link": <Link
            onlyActiveOnIndex={false}
            style={Object {}}
            target="_blank"
            to="/documentation/organizations/manage-team/"
          >
            organization.members.manage_a_team
          </Link>,
        }
      }
    />
  </div>
</header>
`;

exports[`should render for personal GitHub bound organization without sync 1`] = `
<header
  className="page-header"
>
  <h1
    className="page-title"
  >
    organization.members.page
    <DeferredSpinner
      className="little-spacer-left"
      loading={false}
      timeout={100}
    />
  </h1>
  <div
    className="page-actions text-right"
  >
    <div
      className="display-inline-block spacer-left spacer-bottom"
    >
      <AddMemberForm
        addMember={[MockFunction]}
        memberLogins={Array []}
        organization={
          Object {
            "actions": Object {
              "admin": true,
            },
            "alm": Object {
              "key": "github",
              "membersSync": false,
              "personal": true,
              "url": "https://github.com/foo",
            },
            "key": "foo",
            "name": "Foo",
          }
        }
      />
      <DocTooltip
        className="spacer-left"
        doc={Promise {}}
      />
    </div>
  </div>
  <div
    className="page-description"
  >
    <FormattedMessage
      defaultMessage="organization.members.page.description"
      id="organization.members.page.description"
      values={
        Object {
          "link": <Link
            onlyActiveOnIndex={false}
            style={Object {}}
            target="_blank"
            to="/documentation/organizations/manage-team/"
          >
            organization.members.manage_a_team
          </Link>,
        }
      }
    />
  </div>
</header>
`;
