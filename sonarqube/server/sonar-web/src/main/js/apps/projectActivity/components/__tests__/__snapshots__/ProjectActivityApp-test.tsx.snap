// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<div
  className="page page-limited"
  id="project-activity"
>
  <Suggestions
    suggestions="project_activity"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    title="project_activity.page"
  />
  <A11ySkipTarget
    anchor="activity_main"
  />
  <ProjectActivityPageHeader
    category=""
    project={
      Object {
        "key": "foo",
        "leakPeriodDate": "2017-05-16T13:50:02+0200",
        "qualifier": "TRK",
      }
    }
    updateQuery={[Function]}
  />
  <div
    className="layout-page project-activity-page"
  >
    <div
      className="layout-page-side-outer project-activity-page-side-outer boxed-group"
    >
      <ProjectActivityAnalysesList
        addCustomEvent={[MockFunction]}
        addVersion={[MockFunction]}
        analyses={
          Array [
            Object {
              "date": 2016-10-27T14:33:50.000Z,
              "events": Array [
                Object {
                  "category": "VERSION",
                  "key": "E1",
                  "name": "6.5-SNAPSHOT",
                },
              ],
              "key": "A1",
            },
            Object {
              "date": 2016-10-27T10:21:15.000Z,
              "events": Array [],
              "key": "A2",
            },
            Object {
              "date": 2016-10-26T10:17:29.000Z,
              "events": Array [
                Object {
                  "category": "VERSION",
                  "key": "E2",
                  "name": "6.4",
                },
                Object {
                  "category": "OTHER",
                  "key": "E3",
                  "name": "foo",
                },
              ],
              "key": "A3",
            },
          ]
        }
        analysesLoading={false}
        canAdmin={false}
        canDeleteAnalyses={false}
        changeEvent={[MockFunction]}
        deleteAnalysis={[MockFunction]}
        deleteEvent={[MockFunction]}
        initializing={false}
        leakPeriodDate={2017-05-16T11:50:02.000Z}
        project={
          Object {
            "key": "foo",
            "leakPeriodDate": "2017-05-16T13:50:02+0200",
            "qualifier": "TRK",
          }
        }
        query={
          Object {
            "category": "",
            "customMetrics": Array [],
            "graph": "issues",
            "project": "org.sonarsource.sonarqube:sonarqube",
          }
        }
        updateQuery={[Function]}
      />
    </div>
    <div
      className="project-activity-layout-page-main"
    >
      <ProjectActivityGraphs
        analyses={
          Array [
            Object {
              "date": 2016-10-27T14:33:50.000Z,
              "events": Array [
                Object {
                  "category": "VERSION",
                  "key": "E1",
                  "name": "6.5-SNAPSHOT",
                },
              ],
              "key": "A1",
            },
            Object {
              "date": 2016-10-27T10:21:15.000Z,
              "events": Array [],
              "key": "A2",
            },
            Object {
              "date": 2016-10-26T10:17:29.000Z,
              "events": Array [
                Object {
                  "category": "VERSION",
                  "key": "E2",
                  "name": "6.4",
                },
                Object {
                  "category": "OTHER",
                  "key": "E3",
                  "name": "foo",
                },
              ],
              "key": "A3",
            },
          ]
        }
        leakPeriodDate={2017-05-16T11:50:02.000Z}
        loading={false}
        measuresHistory={
          Array [
            Object {
              "history": Array [
                Object {
                  "date": 2016-03-04T09:40:12.000Z,
                  "value": "1749",
                },
                Object {
                  "date": 2016-03-04T17:40:16.000Z,
                  "value": "2286",
                },
              ],
              "metric": "code_smells",
            },
          ]
        }
        metrics={
          Array [
            Object {
              "id": "1",
              "key": "code_smells",
              "name": "Code Smells",
              "type": "INT",
            },
          ]
        }
        project="foo"
        query={
          Object {
            "category": "",
            "customMetrics": Array [],
            "graph": "issues",
            "project": "org.sonarsource.sonarqube:sonarqube",
          }
        }
        updateQuery={[Function]}
      />
    </div>
  </div>
</div>
`;
