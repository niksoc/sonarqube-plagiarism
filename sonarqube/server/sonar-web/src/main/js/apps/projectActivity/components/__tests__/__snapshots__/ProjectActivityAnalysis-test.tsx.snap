// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly: default 1`] = `
<li
  className="project-activity-analysis bordered-top bordered-bottom"
  onClick={[Function]}
>
  <div
    className="display-flex-center display-flex-space-between"
  >
    <div
      className="project-activity-time"
    >
      <TimeFormatter
        date={
          Object {
            "toISOString": [Function],
            "valueOf": [Function],
          }
        }
        long={false}
      >
        <Component />
      </TimeFormatter>
    </div>
  </div>
</li>
`;

exports[`should render correctly: formatted time 1`] = `
<time
  className="text-middle"
  dateTime="2019-01-01T09:00:00.000Z"
>
  formatted_time
</time>
`;

exports[`should render correctly: with admin options 1`] = `
<li
  className="project-activity-analysis bordered-top bordered-bottom"
  onClick={[Function]}
>
  <div
    className="display-flex-center display-flex-space-between"
  >
    <div
      className="project-activity-time"
    >
      <TimeFormatter
        date={
          Object {
            "toISOString": [Function],
            "valueOf": [Function],
          }
        }
        long={false}
      >
        <Component />
      </TimeFormatter>
    </div>
    <ClickEventBoundary>
      <div
        className="project-activity-analysis-actions big-spacer-left"
      >
        <ActionsDropdown
          overlayPlacement="bottom-right"
          small={true}
          toggleClassName="js-analysis-actions"
        >
          <ActionsDropdownItem
            className="js-add-version"
            onClick={[Function]}
          >
            project_activity.add_version
          </ActionsDropdownItem>
          <ActionsDropdownItem
            className="js-add-event"
            onClick={[Function]}
          >
            project_activity.add_custom_event
          </ActionsDropdownItem>
          <ActionsDropdownDivider />
          <ActionsDropdownItem
            className="js-delete-analysis"
            destructive={true}
            onClick={[Function]}
          >
            project_activity.delete_analysis
          </ActionsDropdownItem>
        </ActionsDropdown>
      </div>
    </ClickEventBoundary>
  </div>
</li>
`;

exports[`should render correctly: with baseline marker 1`] = `
<li
  className="project-activity-analysis bordered-top bordered-bottom"
  onClick={[Function]}
>
  <div
    className="display-flex-center display-flex-space-between"
  >
    <div
      className="project-activity-time"
    >
      <TimeFormatter
        date={
          Object {
            "toISOString": [Function],
            "valueOf": [Function],
          }
        }
        long={false}
      >
        <Component />
      </TimeFormatter>
    </div>
  </div>
  <div
    className="baseline-marker"
  >
    <div
      className="wedge"
    />
    <hr />
    <div
      className="label display-flex-center"
    >
      project_activity.new_code_period_start
      <HelpTooltip
        className="little-spacer-left"
        overlay="project_activity.new_code_period_start.help"
        placement="top"
      />
    </div>
  </div>
</li>
`;

exports[`should render correctly: with build string 1`] = `
<li
  className="project-activity-analysis bordered-top bordered-bottom"
  onClick={[Function]}
>
  <div
    className="display-flex-center display-flex-space-between"
  >
    <div
      className="project-activity-time"
    >
      <TimeFormatter
        date={
          Object {
            "toISOString": [Function],
            "valueOf": [Function],
          }
        }
        long={false}
      >
        <Component />
      </TimeFormatter>
    </div>
    <div
      className="flex-shrink small text-muted text-ellipsis"
    >
      project_activity.analysis_build_string_X.1.0.234
    </div>
  </div>
</li>
`;

exports[`should render correctly: with events 1`] = `
<li
  className="project-activity-analysis bordered-top bordered-bottom"
  onClick={[Function]}
>
  <div
    className="display-flex-center display-flex-space-between"
  >
    <div
      className="project-activity-time"
    >
      <TimeFormatter
        date={
          Object {
            "toISOString": [Function],
            "valueOf": [Function],
          }
        }
        long={false}
      >
        <Component />
      </TimeFormatter>
    </div>
  </div>
  <Memo(Events)
    analysisKey="foo"
    events={
      Array [
        Object {
          "category": "QUALITY_GATE",
          "description": "Lorem ipsum dolor sit amet",
          "key": "E11",
          "name": "Lorem ipsum",
          "qualityGate": Object {
            "failing": Array [
              Object {
                "branch": "master",
                "key": "foo",
                "name": "Foo",
              },
              Object {
                "branch": "feature/bar",
                "key": "bar",
                "name": "Bar",
              },
            ],
            "status": "ERROR",
            "stillFailing": true,
          },
        },
      ]
    }
    isFirst={false}
    onChange={[MockFunction]}
    onDelete={[MockFunction]}
  />
</li>
`;
