// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`smoke test 1`] = `
<div
  className="page page-limited"
>
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    title="organization.settings"
  />
  <header
    className="page-header"
  >
    <h1
      className="page-title"
    >
      organization.settings
    </h1>
  </header>
  <div
    className="boxed-group boxed-group-inner"
  >
    <h2
      className="boxed-title"
    >
      organization.details
    </h2>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-name"
        >
          organization.name
          <em
            className="mandatory"
          >
            *
          </em>
        </label>
        <input
          className="input-super-large"
          disabled={false}
          id="organization-name"
          maxLength={255}
          name="name"
          onChange={[Function]}
          required={true}
          type="text"
          value="Foo"
        />
        <div
          className="form-field-description"
        >
          organization.name.description
        </div>
      </div>
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-avatar"
        >
          organization.avatar
        </label>
        <input
          className="input-super-large"
          disabled={false}
          id="organization-avatar"
          maxLength={256}
          name="avatar"
          onChange={[Function]}
          placeholder="onboarding.create_organization.avatar.placeholder"
          type="text"
          value=""
        />
        <div
          className="form-field-description"
        >
          organization.avatar.description
        </div>
        <div
          className="spacer-top"
        >
          <div
            className="little-spacer-bottom"
          >
            organization.avatar.preview
            :
          </div>
          <OrganizationAvatar
            organization={
              Object {
                "avatar": undefined,
                "name": "Foo",
              }
            }
          />
        </div>
      </div>
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-description"
        >
          description
        </label>
        <textarea
          className="input-super-large"
          disabled={false}
          id="organization-description"
          maxLength={256}
          name="description"
          onChange={[Function]}
          rows={3}
          value=""
        />
        <div
          className="form-field-description"
        >
          organization.description.description
        </div>
      </div>
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-url"
        >
          organization.url
        </label>
        <input
          className="input-super-large"
          disabled={false}
          id="organization-url"
          maxLength={256}
          name="url"
          onChange={[Function]}
          type="text"
          value=""
        />
        <div
          className="form-field-description"
        >
          organization.url.description
        </div>
      </div>
      <SubmitButton
        disabled={false}
      >
        save
      </SubmitButton>
    </form>
  </div>
</div>
`;

exports[`smoke test 2`] = `
<div
  className="page page-limited"
>
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    title="organization.settings"
  />
  <header
    className="page-header"
  >
    <h1
      className="page-title"
    >
      organization.settings
    </h1>
  </header>
  <div
    className="boxed-group boxed-group-inner"
  >
    <h2
      className="boxed-title"
    >
      organization.details
    </h2>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-name"
        >
          organization.name
          <em
            className="mandatory"
          >
            *
          </em>
        </label>
        <input
          className="input-super-large"
          disabled={false}
          id="organization-name"
          maxLength={255}
          name="name"
          onChange={[Function]}
          required={true}
          type="text"
          value="New Foo"
        />
        <div
          className="form-field-description"
        >
          organization.name.description
        </div>
      </div>
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-avatar"
        >
          organization.avatar
        </label>
        <input
          className="input-super-large"
          disabled={false}
          id="organization-avatar"
          maxLength={256}
          name="avatar"
          onChange={[Function]}
          placeholder="onboarding.create_organization.avatar.placeholder"
          type="text"
          value="foo-avatar"
        />
        <div
          className="form-field-description"
        >
          organization.avatar.description
        </div>
        <div
          className="spacer-top"
        >
          <div
            className="little-spacer-bottom"
          >
            organization.avatar.preview
            :
          </div>
          <OrganizationAvatar
            organization={
              Object {
                "avatar": "foo-avatar-image",
                "name": "New Foo",
              }
            }
          />
        </div>
      </div>
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-description"
        >
          description
        </label>
        <textarea
          className="input-super-large"
          disabled={false}
          id="organization-description"
          maxLength={256}
          name="description"
          onChange={[Function]}
          rows={3}
          value="foo-description"
        />
        <div
          className="form-field-description"
        >
          organization.description.description
        </div>
      </div>
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-url"
        >
          organization.url
        </label>
        <input
          className="input-super-large"
          disabled={false}
          id="organization-url"
          maxLength={256}
          name="url"
          onChange={[Function]}
          type="text"
          value="foo-url"
        />
        <div
          className="form-field-description"
        >
          organization.url.description
        </div>
      </div>
      <SubmitButton
        disabled={false}
      >
        save
      </SubmitButton>
    </form>
  </div>
</div>
`;

exports[`smoke test 3`] = `
<div
  className="page page-limited"
>
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    title="organization.settings"
  />
  <header
    className="page-header"
  >
    <h1
      className="page-title"
    >
      organization.settings
    </h1>
  </header>
  <div
    className="boxed-group boxed-group-inner"
  >
    <h2
      className="boxed-title"
    >
      organization.details
    </h2>
    <form
      onSubmit={[Function]}
    >
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-name"
        >
          organization.name
          <em
            className="mandatory"
          >
            *
          </em>
        </label>
        <input
          className="input-super-large"
          disabled={true}
          id="organization-name"
          maxLength={255}
          name="name"
          onChange={[Function]}
          required={true}
          type="text"
          value="New Foo"
        />
        <div
          className="form-field-description"
        >
          organization.name.description
        </div>
      </div>
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-avatar"
        >
          organization.avatar
        </label>
        <input
          className="input-super-large"
          disabled={true}
          id="organization-avatar"
          maxLength={256}
          name="avatar"
          onChange={[Function]}
          placeholder="onboarding.create_organization.avatar.placeholder"
          type="text"
          value="foo-avatar"
        />
        <div
          className="form-field-description"
        >
          organization.avatar.description
        </div>
        <div
          className="spacer-top"
        >
          <div
            className="little-spacer-bottom"
          >
            organization.avatar.preview
            :
          </div>
          <OrganizationAvatar
            organization={
              Object {
                "avatar": "foo-avatar-image",
                "name": "New Foo",
              }
            }
          />
        </div>
      </div>
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-description"
        >
          description
        </label>
        <textarea
          className="input-super-large"
          disabled={true}
          id="organization-description"
          maxLength={256}
          name="description"
          onChange={[Function]}
          rows={3}
          value="foo-description"
        />
        <div
          className="form-field-description"
        >
          organization.description.description
        </div>
      </div>
      <div
        className="form-field"
      >
        <label
          htmlFor="organization-url"
        >
          organization.url
        </label>
        <input
          className="input-super-large"
          disabled={true}
          id="organization-url"
          maxLength={256}
          name="url"
          onChange={[Function]}
          type="text"
          value="foo-url"
        />
        <div
          className="form-field-description"
        >
          organization.url.description
        </div>
      </div>
      <SubmitButton
        disabled={true}
      >
        save
      </SubmitButton>
      <i
        className="spinner spacer-left"
      />
    </form>
  </div>
</div>
`;
