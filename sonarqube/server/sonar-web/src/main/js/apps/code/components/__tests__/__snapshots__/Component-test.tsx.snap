// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<tr
  className=""
>
  <td
    className="blank"
  />
  <td
    className="thin nowrap"
  />
  <td
    className="code-name-cell"
  >
    <ComponentName
      canBrowse={false}
      component={
        Object {
          "key": "bar",
          "measures": Array [
            Object {
              "metric": "bugs",
              "value": "12",
            },
            Object {
              "metric": "vulnerabilities",
              "value": "1",
            },
          ],
          "name": "Bar",
          "qualifier": "TRK",
        }
      }
      rootComponent={
        Object {
          "key": "foo",
          "measures": Array [
            Object {
              "bestValue": false,
              "metric": "bugs",
              "value": "12",
            },
          ],
          "name": "Foo",
          "qualifier": "TRK",
        }
      }
    />
  </td>
  <td
    className="thin nowrap text-right"
    key="bugs"
  >
    <div
      className="code-components-cell"
    >
      <ComponentMeasure
        component={
          Object {
            "key": "bar",
            "measures": Array [
              Object {
                "metric": "bugs",
                "value": "12",
              },
              Object {
                "metric": "vulnerabilities",
                "value": "1",
              },
            ],
            "name": "Bar",
            "qualifier": "TRK",
          }
        }
        metric={
          Object {
            "id": "bugs",
            "key": "bugs",
            "name": "Bugs",
            "type": "PERCENT",
          }
        }
      />
    </div>
  </td>
  <td
    className="thin nowrap text-right"
    key="vulnerabilities"
  >
    <div
      className="code-components-cell"
    >
      <ComponentMeasure
        component={
          Object {
            "key": "bar",
            "measures": Array [
              Object {
                "metric": "bugs",
                "value": "12",
              },
              Object {
                "metric": "vulnerabilities",
                "value": "1",
              },
            ],
            "name": "Bar",
            "qualifier": "TRK",
          }
        }
        metric={
          Object {
            "id": "vulnerabilities",
            "key": "vulnerabilities",
            "name": "Vulnerabilities",
            "type": "PERCENT",
          }
        }
      />
    </div>
  </td>
  <td
    className="blank"
  />
</tr>
`;

exports[`should render correctly for a file 1`] = `
<tr
  className=""
>
  <td
    className="blank"
  />
  <td
    className="thin nowrap"
  >
    <span
      className="spacer-right"
    >
      <ContextConsumer>
        <Component />
      </ContextConsumer>
    </span>
  </td>
  <td
    className="code-name-cell"
  >
    <ComponentName
      canBrowse={false}
      component={
        Object {
          "key": "foo:src/index.tsx",
          "measures": Array [
            Object {
              "bestValue": false,
              "metric": "bugs",
              "value": "1",
            },
          ],
          "name": "index.tsx",
          "path": "src/index.tsx",
          "qualifier": "FIL",
        }
      }
      rootComponent={
        Object {
          "key": "foo",
          "measures": Array [
            Object {
              "bestValue": false,
              "metric": "bugs",
              "value": "12",
            },
          ],
          "name": "Foo",
          "qualifier": "TRK",
        }
      }
    />
  </td>
  <td
    className="thin nowrap text-right"
    key="bugs"
  >
    <div
      className="code-components-cell"
    >
      <ComponentMeasure
        component={
          Object {
            "key": "foo:src/index.tsx",
            "measures": Array [
              Object {
                "bestValue": false,
                "metric": "bugs",
                "value": "1",
              },
            ],
            "name": "index.tsx",
            "path": "src/index.tsx",
            "qualifier": "FIL",
          }
        }
        metric={
          Object {
            "id": "bugs",
            "key": "bugs",
            "name": "Bugs",
            "type": "PERCENT",
          }
        }
      />
    </div>
  </td>
  <td
    className="thin nowrap text-right"
    key="vulnerabilities"
  >
    <div
      className="code-components-cell"
    >
      <ComponentMeasure
        component={
          Object {
            "key": "foo:src/index.tsx",
            "measures": Array [
              Object {
                "bestValue": false,
                "metric": "bugs",
                "value": "1",
              },
            ],
            "name": "index.tsx",
            "path": "src/index.tsx",
            "qualifier": "FIL",
          }
        }
        metric={
          Object {
            "id": "vulnerabilities",
            "key": "vulnerabilities",
            "name": "Vulnerabilities",
            "type": "PERCENT",
          }
        }
      />
    </div>
  </td>
  <td
    className="blank"
  />
</tr>
`;
