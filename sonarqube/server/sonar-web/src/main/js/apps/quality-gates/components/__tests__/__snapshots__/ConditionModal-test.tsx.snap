// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should correctly switch scope 1`] = `
<ConfirmModal
  confirmButtonText="header"
  confirmDisable={true}
  header="header"
  onClose={[MockFunction]}
  onConfirm={[Function]}
  size="small"
>
  <div
    className="modal-field display-flex-center"
  >
    <Radio
      checked={true}
      onCheck={[Function]}
      value="new"
    >
      <span
        data-test="quality-gates__condition-scope-new"
      >
        quality_gates.conditions.new_code
      </span>
    </Radio>
    <Radio
      checked={false}
      className="big-spacer-left"
      onCheck={[Function]}
      value="overall"
    >
      <span
        data-test="quality-gates__condition-scope-overall"
      >
        quality_gates.conditions.overall_code
      </span>
    </Radio>
  </div>
  <div
    className="modal-field"
  >
    <label
      htmlFor="condition-metric"
    >
      quality_gates.conditions.fails_when
    </label>
    <MetricSelect
      metrics={
        Array [
          Object {
            "id": "new_coverage",
            "key": "new_coverage",
            "name": "New_coverage",
            "type": "PERCENT",
          },
          Object {
            "id": "new_duplicated_lines",
            "key": "new_duplicated_lines",
            "name": "New_duplicated_lines",
            "type": "PERCENT",
          },
        ]
      }
      onMetricChange={[Function]}
    />
  </div>
</ConfirmModal>
`;

exports[`should correctly switch scope 2`] = `
<ConfirmModal
  confirmButtonText="header"
  confirmDisable={true}
  header="header"
  onClose={[MockFunction]}
  onConfirm={[Function]}
  size="small"
>
  <div
    className="modal-field display-flex-center"
  >
    <Radio
      checked={false}
      onCheck={[Function]}
      value="new"
    >
      <span
        data-test="quality-gates__condition-scope-new"
      >
        quality_gates.conditions.new_code
      </span>
    </Radio>
    <Radio
      checked={true}
      className="big-spacer-left"
      onCheck={[Function]}
      value="overall"
    >
      <span
        data-test="quality-gates__condition-scope-overall"
      >
        quality_gates.conditions.overall_code
      </span>
    </Radio>
  </div>
  <div
    className="modal-field"
  >
    <label
      htmlFor="condition-metric"
    >
      quality_gates.conditions.fails_when
    </label>
    <MetricSelect
      metrics={
        Array [
          Object {
            "id": "coverage",
            "key": "coverage",
            "name": "Coverage",
            "type": "PERCENT",
          },
          Object {
            "id": "duplicated_lines",
            "key": "duplicated_lines",
            "name": "Duplicated_lines",
            "type": "PERCENT",
          },
        ]
      }
      onMetricChange={[Function]}
    />
  </div>
</ConfirmModal>
`;

exports[`should correctly switch scope 3`] = `
<ConfirmModal
  confirmButtonText="header"
  confirmDisable={true}
  header="header"
  onClose={[MockFunction]}
  onConfirm={[Function]}
  size="small"
>
  <div
    className="modal-field display-flex-center"
  >
    <Radio
      checked={true}
      onCheck={[Function]}
      value="new"
    >
      <span
        data-test="quality-gates__condition-scope-new"
      >
        quality_gates.conditions.new_code
      </span>
    </Radio>
    <Radio
      checked={false}
      className="big-spacer-left"
      onCheck={[Function]}
      value="overall"
    >
      <span
        data-test="quality-gates__condition-scope-overall"
      >
        quality_gates.conditions.overall_code
      </span>
    </Radio>
  </div>
  <div
    className="modal-field"
  >
    <label
      htmlFor="condition-metric"
    >
      quality_gates.conditions.fails_when
    </label>
    <MetricSelect
      metrics={
        Array [
          Object {
            "id": "new_coverage",
            "key": "new_coverage",
            "name": "New_coverage",
            "type": "PERCENT",
          },
          Object {
            "id": "new_duplicated_lines",
            "key": "new_duplicated_lines",
            "name": "New_duplicated_lines",
            "type": "PERCENT",
          },
        ]
      }
      onMetricChange={[Function]}
    />
  </div>
</ConfirmModal>
`;

exports[`should render correctly 1`] = `
<ConfirmModal
  confirmButtonText="header"
  confirmDisable={true}
  header="header"
  onClose={[MockFunction]}
  onConfirm={[Function]}
  size="small"
>
  <div
    className="modal-field display-flex-center"
  >
    <Radio
      checked={true}
      onCheck={[Function]}
      value="new"
    >
      <span
        data-test="quality-gates__condition-scope-new"
      >
        quality_gates.conditions.new_code
      </span>
    </Radio>
    <Radio
      checked={false}
      className="big-spacer-left"
      onCheck={[Function]}
      value="overall"
    >
      <span
        data-test="quality-gates__condition-scope-overall"
      >
        quality_gates.conditions.overall_code
      </span>
    </Radio>
  </div>
  <div
    className="modal-field"
  >
    <label
      htmlFor="condition-metric"
    >
      quality_gates.conditions.fails_when
    </label>
    <MetricSelect
      metrics={
        Array [
          Object {
            "id": "new_coverage",
            "key": "new_coverage",
            "name": "New_coverage",
            "type": "PERCENT",
          },
          Object {
            "id": "new_duplicated_lines",
            "key": "new_duplicated_lines",
            "name": "New_duplicated_lines",
            "type": "PERCENT",
          },
        ]
      }
      onMetricChange={[Function]}
    />
  </div>
</ConfirmModal>
`;

exports[`should render correctly 2`] = `
<ConfirmModal
  confirmButtonText="header"
  confirmDisable={false}
  header="header"
  onClose={[MockFunction]}
  onConfirm={[Function]}
  size="small"
>
  <div
    className="modal-field"
  >
    <label
      htmlFor="condition-metric"
    >
      quality_gates.conditions.fails_when
    </label>
    <MetricSelect
      metric={
        Object {
          "id": "coverage",
          "key": "coverage",
          "name": "Coverage",
          "type": "PERCENT",
        }
      }
      metrics={
        Array [
          Object {
            "id": "new_coverage",
            "key": "new_coverage",
            "name": "New_coverage",
            "type": "PERCENT",
          },
          Object {
            "id": "new_duplicated_lines",
            "key": "new_duplicated_lines",
            "name": "New_duplicated_lines",
            "type": "PERCENT",
          },
        ]
      }
      onMetricChange={[Function]}
    />
    <span
      className="note"
    >
      Coverage
    </span>
  </div>
  <div
    className="modal-field display-inline-block"
  >
    <label
      htmlFor="condition-operator"
    >
      quality_gates.conditions.operator
    </label>
    <ConditionOperator
      metric={
        Object {
          "id": "coverage",
          "key": "coverage",
          "name": "Coverage",
          "type": "PERCENT",
        }
      }
      onOperatorChange={[Function]}
    />
  </div>
  <div
    className="modal-field display-inline-block spacer-left"
  >
    <label
      htmlFor="condition-threshold"
    >
      quality_gates.conditions.value
    </label>
    <ThresholdInput
      metric={
        Object {
          "id": "coverage",
          "key": "coverage",
          "name": "Coverage",
          "type": "PERCENT",
        }
      }
      name="error"
      onChange={[Function]}
      value=""
    />
  </div>
</ConfirmModal>
`;
