// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render form 1`] = `
<Modal
  contentLabel="header"
  onRequestClose={[MockFunction]}
  size="small"
>
  <form
    onSubmit={[Function]}
  >
    <header
      className="modal-head"
    >
      <h2>
        header
      </h2>
    </header>
    <div
      className="modal-body modal-container"
    >
      <div
        className="modal-field"
      >
        <label
          htmlFor="create-metric-key"
        >
          key
          <em
            className="mandatory"
          >
            *
          </em>
        </label>
        <input
          autoFocus={true}
          id="create-metric-key"
          maxLength={64}
          name="key"
          onChange={[Function]}
          required={true}
          type="text"
          value=""
        />
      </div>
      <div
        className="modal-field"
      >
        <label
          htmlFor="create-metric-name"
        >
          name
          <em
            className="mandatory"
          >
            *
          </em>
        </label>
        <input
          id="create-metric-name"
          maxLength={64}
          name="name"
          onChange={[Function]}
          required={true}
          type="text"
          value=""
        />
      </div>
      <div
        className="modal-field"
      >
        <label
          htmlFor="create-metric-description"
        >
          description
        </label>
        <textarea
          id="create-metric-description"
          name="description"
          onChange={[Function]}
          value=""
        />
      </div>
      <div
        className="modal-field"
      >
        <label
          htmlFor="create-metric-domain"
        >
          custom_metrics.domain
        </label>
        <Creatable
          id="create-metric-domain"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Coverage",
                "value": "Coverage",
              },
              Object {
                "label": "Issues",
                "value": "Issues",
              },
            ]
          }
        />
      </div>
      <div
        className="modal-field"
      >
        <label
          htmlFor="create-metric-type"
        >
          type
          <em
            className="mandatory"
          >
            *
          </em>
        </label>
        <Select
          clearable={false}
          id="create-metric-type"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "metric.type.INT",
                "value": "INT",
              },
              Object {
                "label": "metric.type.STRING",
                "value": "STRING",
              },
            ]
          }
          value="INT"
        />
      </div>
    </div>
    <footer
      className="modal-foot"
    >
      <DeferredSpinner
        className="spacer-right"
        loading={false}
        timeout={100}
      />
      <SubmitButton
        disabled={false}
        id="create-metric-submit"
      >
        confirmButtonText
      </SubmitButton>
      <ResetButtonLink
        disabled={false}
        id="create-metric-cancel"
        onClick={[Function]}
      >
        cancel
      </ResetButtonLink>
    </footer>
  </form>
</Modal>
`;
