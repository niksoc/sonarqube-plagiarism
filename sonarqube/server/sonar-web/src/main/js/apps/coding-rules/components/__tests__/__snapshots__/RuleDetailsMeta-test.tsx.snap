// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should display right meta info 1`] = `
<div
  className="js-rule-meta"
>
  <header
    className="page-header"
  >
    <div
      className="pull-right"
    >
      <span
        className="note text-middle"
      >
        squid:S1133
      </span>
      <Link
        className="coding-rules-detail-permalink link-no-underline spacer-left text-middle"
        onlyActiveOnIndex={false}
        style={Object {}}
        title="permalink"
        to={
          Object {
            "pathname": "/coding_rules",
            "query": Object {
              "open": "squid:S1133",
              "rule_key": "squid:S1133",
            },
          }
        }
      >
        <LinkIcon />
      </Link>
      <SimilarRulesFilter
        onFilterChange={[MockFunction]}
        rule={
          Object {
            "createdAt": "2013-07-26T09:40:51+0200",
            "key": "squid:S1133",
            "lang": "java",
            "langName": "Java",
            "name": "Deprecated code should be removed",
            "repo": "squid",
            "scope": "MAIN",
            "severity": "INFO",
            "status": "READY",
            "type": "CODE_SMELL",
          }
        }
      />
    </div>
    <h3
      className="page-title coding-rules-detail-header"
    >
      <big>
        Deprecated code should be removed
      </big>
    </h3>
  </header>
  <ul
    className="coding-rules-detail-properties"
  >
    <Tooltip
      overlay="coding_rules.type.tooltip.CODE_SMELL"
    >
      <li
        className="coding-rules-detail-property"
        data-meta="type"
      >
        <IssueTypeIcon
          className="little-spacer-right"
          query="CODE_SMELL"
        />
        issue.type.CODE_SMELL
      </li>
    </Tooltip>
    <Tooltip
      overlay="default_severity"
    >
      <li
        className="coding-rules-detail-property"
        data-meta="severity"
      >
        <SeverityHelper
          className="display-inline-flex-center"
          severity="INFO"
        />
      </li>
    </Tooltip>
    <Tooltip
      overlay="coding_rules.scope.title"
    >
      <li
        className="coding-rules-detail-property"
      >
        <RuleScopeIcon
          className="little-spacer-right"
        />
        coding_rules.scope.MAIN
      </li>
    </Tooltip>
    <li
      className="coding-rules-detail-property"
      data-meta="tags"
    >
      <Dropdown
        closeOnClick={false}
        closeOnClickOutside={true}
        overlay={
          <RuleDetailsTagsPopup
            setTags={[MockFunction]}
            sysTags={Array []}
            tags={Array []}
          />
        }
        overlayPlacement="bottom-left"
      >
        <ButtonLink>
          <TagsList
            allowUpdate={true}
            tags={
              Array [
                "coding_rules.no_tags",
              ]
            }
          />
        </ButtonLink>
      </Dropdown>
    </li>
    <li
      className="coding-rules-detail-property"
      data-meta="available-since"
    >
      <span
        className="little-spacer-right"
      >
        coding_rules.available_since
      </span>
      <DateFormatter
        date="2013-07-26T09:40:51+0200"
      />
    </li>
  </ul>
</div>
`;

exports[`should display right meta info 2`] = `
<div
  className="js-rule-meta"
>
  <header
    className="page-header"
  >
    <div
      className="pull-right"
    >
      <span
        className="note text-middle"
      >
        xoo:OneExternalIssuePerLine
      </span>
    </div>
    <h3
      className="page-title coding-rules-detail-header"
    >
      <big>
        xoo:OneExternalIssuePerLine
      </big>
    </h3>
  </header>
</div>
`;

exports[`should display right meta info 3`] = `
<div
  className="js-rule-meta"
>
  <header
    className="page-header"
  >
    <div
      className="pull-right"
    >
      <span
        className="note text-middle"
      >
        xoo:OneExternalIssueWithDetailsPerLine
      </span>
    </div>
    <h3
      className="page-title coding-rules-detail-header"
    >
      <big>
        One external issue per line
      </big>
    </h3>
  </header>
  <ul
    className="coding-rules-detail-properties"
  >
    <Tooltip
      overlay="coding_rules.type.tooltip.BUG"
    >
      <li
        className="coding-rules-detail-property"
        data-meta="type"
      >
        <IssueTypeIcon
          className="little-spacer-right"
          query="BUG"
        />
        issue.type.BUG
      </li>
    </Tooltip>
    <Tooltip
      overlay="default_severity"
    >
      <li
        className="coding-rules-detail-property"
        data-meta="severity"
      >
        <SeverityHelper
          className="display-inline-flex-center"
          severity="MAJOR"
        />
      </li>
    </Tooltip>
    <li
      className="coding-rules-detail-property"
      data-meta="tags"
    >
      <Dropdown
        closeOnClick={false}
        closeOnClickOutside={true}
        overlay={
          <RuleDetailsTagsPopup
            setTags={[MockFunction]}
            sysTags={Array []}
            tags={
              Array [
                "tag",
              ]
            }
          />
        }
        overlayPlacement="bottom-left"
      >
        <ButtonLink>
          <TagsList
            allowUpdate={true}
            tags={
              Array [
                "tag",
              ]
            }
          />
        </ButtonLink>
      </Dropdown>
    </li>
    <Tooltip
      overlay="coding_rules.external_rule.engine.xoo"
    >
      <li
        className="coding-rules-detail-property"
      >
        <div
          className="badge spacer-left text-text-top"
        >
          xoo
        </div>
      </li>
    </Tooltip>
  </ul>
</div>
`;

exports[`should edit tags 1`] = `
<li
  className="coding-rules-detail-property"
  data-meta="tags"
>
  <Dropdown
    closeOnClick={false}
    closeOnClickOutside={true}
    overlay={
      <RuleDetailsTagsPopup
        setTags={[MockFunction]}
        sysTags={Array []}
        tags={Array []}
      />
    }
    overlayPlacement="bottom-left"
  >
    <ButtonLink>
      <TagsList
        allowUpdate={true}
        tags={
          Array [
            "coding_rules.no_tags",
          ]
        }
      />
    </ButtonLink>
  </Dropdown>
</li>
`;
