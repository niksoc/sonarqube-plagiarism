// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<Fragment>
  <Helmet
    defer={true}
    encodeSpecialCharacters={true}
    title="MyProject"
  />
  <header
    className="display-flex-center flex-shrink"
  >
    <Breadcrumb
      component={
        Object {
          "breadcrumbs": Array [],
          "key": "my-project",
          "name": "MyProject",
          "organization": "foo",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      currentBranchLike={
        Object {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": false,
          "name": "branch-11",
        }
      }
    />
    <Favorite
      className="spacer-left"
      component="my-project"
      favorite={false}
      qualifier="TRK"
    />
    <Connect(withAppState(Component))
      branchLikes={
        Array [
          Object {
            "analysisDate": "2018-01-01",
            "excludedFromPurge": true,
            "isMain": false,
            "name": "branch-11",
          },
          Object {
            "analysisDate": "2018-01-01",
            "excludedFromPurge": true,
            "isMain": false,
            "name": "branch-1",
          },
          Object {
            "analysisDate": "2018-01-01",
            "excludedFromPurge": true,
            "isMain": true,
            "name": "master",
          },
          Object {
            "analysisDate": "2018-01-01",
            "base": "master",
            "branch": "feature/foo/bar",
            "key": "1",
            "target": "master",
            "title": "PR-1",
          },
          Object {
            "analysisDate": "2018-01-01",
            "excludedFromPurge": true,
            "isMain": false,
            "name": "branch-12",
          },
          Object {
            "analysisDate": "2018-01-01",
            "base": "master",
            "branch": "feature/foo/bar",
            "key": "2",
            "target": "master",
            "title": "PR-2",
          },
          Object {
            "analysisDate": "2018-01-01",
            "excludedFromPurge": true,
            "isMain": false,
            "name": "branch-3",
          },
          Object {
            "analysisDate": "2018-01-01",
            "excludedFromPurge": true,
            "isMain": false,
            "name": "branch-2",
          },
          Object {
            "analysisDate": "2018-01-01",
            "base": "master",
            "branch": "feature/foo/bar",
            "isOrphan": true,
            "key": "2",
            "target": "llb-100",
            "title": "PR-2",
          },
        ]
      }
      component={
        Object {
          "breadcrumbs": Array [],
          "key": "my-project",
          "name": "MyProject",
          "organization": "foo",
          "qualifier": "TRK",
          "qualityGate": Object {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": Array [
            Object {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": Array [],
        }
      }
      currentBranchLike={
        Object {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": false,
          "name": "branch-11",
        }
      }
    />
    <Memo(CurrentBranchLikeMergeInformation)
      currentBranchLike={
        Object {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": false,
          "name": "branch-11",
        }
      }
    />
  </header>
</Fragment>
`;
