// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should display marketing badge params 1`] = `
<div>
  <label
    className="spacer-right"
    htmlFor="badge-color"
  >
    color
    :
  </label>
  <Select
    className="input-medium"
    clearable={false}
    name="badge-color"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "overview.badges.options.colors.white",
          "value": "white",
        },
        Object {
          "label": "overview.badges.options.colors.black",
          "value": "black",
        },
        Object {
          "label": "overview.badges.options.colors.orange",
          "value": "orange",
        },
      ]
    }
    searchable={false}
    value="white"
  />
  <label
    className="spacer-right spacer-top"
    htmlFor="badge-format"
  >
    format
    :
  </label>
  <Select
    className="input-medium"
    clearable={false}
    name="badge-format"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "overview.badges.options.formats.md",
          "value": "md",
        },
        Object {
          "label": "overview.badges.options.formats.url",
          "value": "url",
        },
      ]
    }
    searchable={false}
    value="md"
  />
</div>
`;

exports[`should display measure badge params 1`] = `
<div>
  <label
    className="spacer-right"
    htmlFor="badge-metric"
  >
    overview.badges.metric
    :
  </label>
  <Select
    className="input-medium"
    clearable={false}
    menuStyle={
      Object {
        "maxHeight": 100,
      }
    }
    name="badge-metric"
    onChange={[Function]}
    options={Array []}
    searchable={false}
    value="alert_status"
  />
  <label
    className="spacer-right spacer-top"
    htmlFor="badge-format"
  >
    format
    :
  </label>
  <Select
    className="input-medium"
    clearable={false}
    name="badge-format"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "overview.badges.options.formats.md",
          "value": "md",
        },
        Object {
          "label": "overview.badges.options.formats.url",
          "value": "url",
        },
      ]
    }
    searchable={false}
    value="md"
  />
</div>
`;

exports[`should display quality gate badge params 1`] = `
<div>
  <label
    className="spacer-right"
    htmlFor="badge-format"
  >
    format
    :
  </label>
  <Select
    className="input-medium"
    clearable={false}
    name="badge-format"
    onChange={[Function]}
    options={
      Array [
        Object {
          "label": "overview.badges.options.formats.md",
          "value": "md",
        },
        Object {
          "label": "overview.badges.options.formats.url",
          "value": "url",
        },
      ]
    }
    searchable={false}
    value="md"
  />
</div>
`;
