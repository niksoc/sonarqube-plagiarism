// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should open the right popups when the buttons are clicked 1`] = `
Object {
  "openPopup": "edit",
}
`;

exports[`should open the right popups when the buttons are clicked 2`] = `
Object {
  "openPopup": "delete",
}
`;

exports[`should open the right popups when the buttons are clicked 3`] = `
<div
  className="issue-comment"
>
  <div
    className="issue-comment-author"
    title="John Doe"
  >
    <Connect(Avatar)
      className="little-spacer-right"
      hash="gravatarhash"
      name="John Doe"
      size={16}
    />
    John Doe
  </div>
  <div
    className="issue-comment-text markdown"
    dangerouslySetInnerHTML={
      Object {
        "__html": "<b>test</b>",
      }
    }
  />
  <div
    className="issue-comment-age"
  >
    <DateFromNow
      date="2017-03-01T09:36:01+0100"
    />
  </div>
  <div
    className="issue-comment-actions"
  >
    <div
      className="dropdown"
    >
      <Toggler
        closeOnClickOutside={false}
        onRequestClose={[Function]}
        open={false}
        overlay={
          <CommentPopup
            comment={
              Object {
                "author": "john.doe",
                "authorActive": true,
                "authorAvatar": "gravatarhash",
                "authorName": "John Doe",
                "createdAt": "2017-03-01T09:36:01+0100",
                "htmlText": "<b>test</b>",
                "key": "comment-key",
                "markdown": "*test*",
                "updatable": true,
              }
            }
            onComment={[Function]}
            placeholder=""
            placement="bottom-right"
            toggleComment={[Function]}
          />
        }
      >
        <EditButton
          className="js-issue-comment-edit button-small"
          onClick={[Function]}
        />
      </Toggler>
    </div>
    <div
      className="dropdown"
    >
      <Toggler
        onRequestClose={[Function]}
        open={true}
        overlay={
          <CommentDeletePopup
            onDelete={[Function]}
          />
        }
      >
        <DeleteButton
          className="js-issue-comment-delete button-small"
          onClick={[Function]}
        />
      </Toggler>
    </div>
  </div>
</div>
`;

exports[`should render correctly a comment that is not updatable 1`] = `
<div
  className="issue-comment"
>
  <div
    className="issue-comment-author"
    title="John Doe"
  >
    <Connect(Avatar)
      className="little-spacer-right"
      hash="gravatarhash"
      name="John Doe"
      size={16}
    />
    John Doe
  </div>
  <div
    className="issue-comment-text markdown"
    dangerouslySetInnerHTML={
      Object {
        "__html": "<b>test</b>",
      }
    }
  />
  <div
    className="issue-comment-age"
  >
    <DateFromNow
      date="2017-03-01T09:36:01+0100"
    />
  </div>
  <div
    className="issue-comment-actions"
  />
</div>
`;

exports[`should render correctly a comment that is updatable 1`] = `
<div
  className="issue-comment"
>
  <div
    className="issue-comment-author"
    title="John Doe"
  >
    <Connect(Avatar)
      className="little-spacer-right"
      hash="gravatarhash"
      name="John Doe"
      size={16}
    />
    John Doe
  </div>
  <div
    className="issue-comment-text markdown"
    dangerouslySetInnerHTML={
      Object {
        "__html": "<b>test</b>",
      }
    }
  />
  <div
    className="issue-comment-age"
  >
    <DateFromNow
      date="2017-03-01T09:36:01+0100"
    />
  </div>
  <div
    className="issue-comment-actions"
  >
    <div
      className="dropdown"
    >
      <Toggler
        closeOnClickOutside={false}
        onRequestClose={[Function]}
        open={false}
        overlay={
          <CommentPopup
            comment={
              Object {
                "author": "john.doe",
                "authorActive": true,
                "authorAvatar": "gravatarhash",
                "authorName": "John Doe",
                "createdAt": "2017-03-01T09:36:01+0100",
                "htmlText": "<b>test</b>",
                "key": "comment-key",
                "markdown": "*test*",
                "updatable": true,
              }
            }
            onComment={[Function]}
            placeholder=""
            placement="bottom-right"
            toggleComment={[Function]}
          />
        }
      >
        <EditButton
          className="js-issue-comment-edit button-small"
          onClick={[Function]}
        />
      </Toggler>
    </div>
    <div
      className="dropdown"
    >
      <Toggler
        onRequestClose={[Function]}
        open={false}
        overlay={
          <CommentDeletePopup
            onDelete={[Function]}
          />
        }
      >
        <DeleteButton
          className="js-issue-comment-delete button-small"
          onClick={[Function]}
        />
      </Toggler>
    </div>
  </div>
</div>
`;

exports[`should render correctly a comment with a deleted author 1`] = `
<div
  className="issue-comment-author"
  title="user.x_deleted.john.doe"
>
  <Connect(Avatar)
    className="little-spacer-right"
    hash="gravatarhash"
    name="john.doe"
    size={16}
  />
  user.x_deleted.john.doe
</div>
`;
