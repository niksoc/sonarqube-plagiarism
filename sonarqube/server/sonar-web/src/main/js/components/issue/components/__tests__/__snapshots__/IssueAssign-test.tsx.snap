// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should open the popup when the button is clicked 1`] = `
Array [
  Array [
    "assign",
    undefined,
  ],
]
`;

exports[`should open the popup when the button is clicked 2`] = `
<div
  className="dropdown"
>
  <Toggler
    closeOnEscape={true}
    onRequestClose={[Function]}
    open={true}
    overlay={
      <Connect(withCurrentUser(SetAssigneePopup))
        issue={
          Object {
            "assignee": "john",
            "assigneeAvatar": "gravatarhash",
            "assigneeName": "John Doe",
            "projectOrganization": "org",
          }
        }
        onSelect={[MockFunction]}
      />
    }
  >
    <ButtonLink
      className="issue-action issue-action-with-options js-issue-assign"
      onClick={[Function]}
    >
      <span
        className="text-top"
      >
        <Connect(Avatar)
          className="little-spacer-right"
          hash="gravatarhash"
          name="John Doe"
          size={16}
        />
      </span>
      <span
        className="issue-meta-label"
      >
        John Doe
      </span>
      <DropdownIcon
        className="little-spacer-left"
      />
    </ButtonLink>
  </Toggler>
</div>
`;

exports[`should render a fallback assignee display if assignee info are not available 1`] = `
<div
  className="dropdown"
>
  <Toggler
    closeOnEscape={true}
    onRequestClose={[Function]}
    open={false}
    overlay={
      <Connect(withCurrentUser(SetAssigneePopup))
        issue={
          Object {
            "projectOrganization": "org",
          }
        }
        onSelect={[MockFunction]}
      />
    }
  >
    <ButtonLink
      className="issue-action issue-action-with-options js-issue-assign"
      onClick={[Function]}
    >
      <span
        className="issue-meta-label"
      >
        unassigned
      </span>
      <DropdownIcon
        className="little-spacer-left"
      />
    </ButtonLink>
  </Toggler>
</div>
`;

exports[`should render with the action 1`] = `
<div
  className="dropdown"
>
  <Toggler
    closeOnEscape={true}
    onRequestClose={[Function]}
    open={false}
    overlay={
      <Connect(withCurrentUser(SetAssigneePopup))
        issue={
          Object {
            "assignee": "john",
            "assigneeAvatar": "gravatarhash",
            "assigneeName": "John Doe",
            "projectOrganization": "org",
          }
        }
        onSelect={[MockFunction]}
      />
    }
  >
    <ButtonLink
      className="issue-action issue-action-with-options js-issue-assign"
      onClick={[Function]}
    >
      <span
        className="text-top"
      >
        <Connect(Avatar)
          className="little-spacer-right"
          hash="gravatarhash"
          name="John Doe"
          size={16}
        />
      </span>
      <span
        className="issue-meta-label"
      >
        John Doe
      </span>
      <DropdownIcon
        className="little-spacer-left"
      />
    </ButtonLink>
  </Toggler>
</div>
`;

exports[`should render without the action when the correct rights are missing 1`] = `
<Fragment>
  <span
    className="text-top"
  >
    <Connect(Avatar)
      className="little-spacer-right"
      hash="gravatarhash"
      name="John Doe"
      size={16}
    />
  </span>
  <span
    className="issue-meta-label"
  >
    John Doe
  </span>
</Fragment>
`;
